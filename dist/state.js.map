{"version":3,"sources":["state.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;MA6Ba,wBAOT,eAAY,MAAZ,EAAoB,IAApB,EAA0B,OAA1B,EAAmC;;;;;;;;;;;AAS/B,SAAK,OAAL,GAAe;AACX,oBAAc,MAAd;AACA,oBAAc,UAAd;KAFJ,CAT+B;;AAc/B,QAAI,YAAY,IAAZ,EAAkB;AAClB,WAAK,OAAL,GAAe,iBAAE,MAAF,CAAS,KAAK,OAAL,EAAc,OAAvB,CAAf,CADkB;KAAtB;;AAIA,QAAM,UAAU,IAAC,CAAK,SAAL,CAAe,OAAf,CAAuB,KAAK,OAAL,CAAa,YAAb,CAAvB,IAAqD,CAArD,GAA0D,KAA3D,GAAmE,MAAnE,CAlBe;AAmB/B,QAAM,WAAW,KAAK,YAAL,CAAkB,cAAlB,CAAX,CAnByB;AAoB/B,QAAM,SAAS,QAAC,IAAY,GAAZ,GAAoB,IAArB,GAA8B,KAA9B,CApBgB;AAqB/B,QAAI,QAAQ,KAAK,YAAL,CAAkB,YAAlB,CAAR,CArB2B;AAsB/B,QAAI,WAAW,KAAK,YAAL,CAAkB,OAAO,OAAP,CAAe,cAAf,CAA7B,CAtB2B;;AAwB/B,QAAG,UAAU,EAAV,EAAc,QAAQ,KAAK,SAAL,CAAzB;AACA,QAAG,aAAa,EAAb,EAAiB,WAAW,MAAX,CAApB;;;;;AAzB+B,QA8B/B,CAAK,KAAL,GAAa,KAAb;;;;AA9B+B,QAkC/B,CAAK,IAAL,GAAY,KAAK,IAAL;;;;AAlCmB,QAsC/B,CAAK,QAAL,GAAgB,QAAhB;;;;AAtC+B,QA0C/B,CAAK,QAAL,GAAgB,KAAK,YAAL,CAAkB,gBAAlB,CAAhB;;;;AA1C+B,QA8C/B,CAAK,KAAL,GAAa,OAAO,KAAK,YAAL,CAAkB,YAAlB,CAAP,CAAb;;;;AA9C+B,QAkD/B,CAAK,UAAL,GAAkB,KAAK,OAAL,CAAa,YAAb,GAA0B,MAA1B,GAAiC,QAAjC;;;;;;;;;AAlDa,QA2D/B,CAAK,OAAL,GAAe,OAAf;;;;AA3D+B,QA+D/B,CAAK,MAAL,GAAc,MAAd,CA/D+B;GAAnC","file":"state.js","sourcesContent":["/**\n * Copyright Â© 2016, Ambroise Maupate\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is furnished\n * to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n *\n * @file state.js\n * @author Ambroise Maupate\n */\nimport $ from \"jquery\";\n\n/**\n * State object is meant to carry informations during HTML5 History changes.\n */\nexport class State {\n    /**\n     *\n     * @param {Router} router\n     * @param {String} link\n     * @param {Object} options Extends state options.\n     */\n    constructor(router, link, options) {\n        /**\n         * Keep custom informations such as:\n         *\n         * - `previousType`: Default `\"page\"`\n         * - `navLinkClass`: Default `\"nav-link\"`\n         *\n         * @type {Object}\n         */\n        this.options = {\n            previousType: \"page\",\n            navLinkClass: \"nav-link\"\n        };\n\n        if (options !== null) {\n            this.options = $.extend(this.options, options);\n        }\n\n        const context = (link.className.indexOf(this.options.navLinkClass) >= 0) ? 'nav' : 'link';\n        const dataHome = link.getAttribute('data-is-home');\n        const isHome = (dataHome == '1') ? (true) : (false);\n        let title = link.getAttribute('data-title');\n        let nodeType = link.getAttribute(router.options.objectTypeAttr);\n\n        if(title === '') title = link.innerHTML;\n        if(nodeType === '') nodeType = \"page\";\n\n        /**\n         * @type {String}\n         */\n        this.title = title;\n        /**\n         * @type {String}\n         */\n        this.href = link.href;\n        /**\n         * @type {String}\n         */\n        this.nodeType = nodeType;\n        /**\n         * @type {String}\n         */\n        this.nodeName = link.getAttribute('data-node-name');\n        /**\n         * @type {Number}\n         */\n        this.index = Number(link.getAttribute('data-index'));\n        /**\n         * @type {String}\n         */\n        this.transition = this.options.previousType+'_to_'+nodeType;\n        /**\n         * History change context:\n         *\n         * - `nav`\n         * - `link`\n         *\n         * @type {String}\n         */\n        this.context = context;\n        /**\n         * @type {Boolean}\n         */\n        this.isHome = isHome;\n    }\n}\n"],"sourceRoot":"/source/"}